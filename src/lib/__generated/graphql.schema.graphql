"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  blogPostCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): BlogPostCollection
  componentSeoCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentSeoCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageLandingCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageLandingCollection
  pageProductCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageProductCollection
  personCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PersonCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/6mnvn3infhdn/content_types/blogPost)
"""
type BlogPost implements Entry {
  author(locale: String, preview: Boolean, where: PersonFilter): Person
  body(locale: String): BlogPostBody
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): BlogPostDescription
  heroImage(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): BlogPostLinkingCollections
  publishDate(locale: String): DateTime
  slug(locale: String): String
  sys: Sys!
  tags(locale: String): [String]
  title(locale: String): String
}

type BlogPostBody {
  json: JSON!
  links: BlogPostBodyLinks!
}

type BlogPostBodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type BlogPostBodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type BlogPostBodyLinks {
  assets: BlogPostBodyAssets!
  entries: BlogPostBodyEntries!
  resources: BlogPostBodyResources!
}

type BlogPostBodyResources {
  block: [ResourceLink!]!
  hyperlink: [ResourceLink!]!
  inline: [ResourceLink!]!
}

type BlogPostCollection {
  items: [BlogPost]!
  limit: Int!
  skip: Int!
  total: Int!
}

type BlogPostDescription {
  json: JSON!
  links: BlogPostDescriptionLinks!
}

type BlogPostDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type BlogPostDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type BlogPostDescriptionLinks {
  assets: BlogPostDescriptionAssets!
  entries: BlogPostDescriptionEntries!
  resources: BlogPostDescriptionResources!
}

type BlogPostDescriptionResources {
  block: [ResourceLink!]!
  hyperlink: [ResourceLink!]!
  inline: [ResourceLink!]!
}

input BlogPostFilter {
  AND: [BlogPostFilter]
  OR: [BlogPostFilter]
  author: cfPersonNestedFilter
  author_exists: Boolean
  body_contains: String
  body_exists: Boolean
  body_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  heroImage_exists: Boolean
  publishDate: DateTime
  publishDate_exists: Boolean
  publishDate_gt: DateTime
  publishDate_gte: DateTime
  publishDate_in: [DateTime]
  publishDate_lt: DateTime
  publishDate_lte: DateTime
  publishDate_not: DateTime
  publishDate_not_in: [DateTime]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  tags_contains_all: [String]
  tags_contains_none: [String]
  tags_contains_some: [String]
  tags_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type BlogPostLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum BlogPostOrder {
  publishDate_ASC
  publishDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
To have SEO-related properties in the pages we render [See type definition](https://app.contentful.com/spaces/6mnvn3infhdn/content_types/componentSeo)
"""
type ComponentSeo implements Entry {
  canonicalUrl(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentSeoLinkingCollections
  nofollow(locale: String): Boolean
  noindex(locale: String): Boolean
  pageDescription(locale: String): String
  pageTitle(locale: String): String
  shareImagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  sys: Sys!
}

type ComponentSeoCollection {
  items: [ComponentSeo]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentSeoFilter {
  AND: [ComponentSeoFilter]
  OR: [ComponentSeoFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  nofollow: Boolean
  nofollow_exists: Boolean
  nofollow_not: Boolean
  noindex: Boolean
  noindex_exists: Boolean
  noindex_not: Boolean
  pageDescription: String
  pageDescription_contains: String
  pageDescription_exists: Boolean
  pageDescription_in: [String]
  pageDescription_not: String
  pageDescription_not_contains: String
  pageDescription_not_in: [String]
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  shareImagesCollection_exists: Boolean
  sys: SysFilter
}

type ComponentSeoLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  genericContentCollection(limit: Int = 100, locale: String, order: [ComponentSeoLinkingCollectionsGenericContentCollectionOrder], preview: Boolean, skip: Int = 0): GenericContentCollection
  pageLandingCollection(limit: Int = 100, locale: String, order: [ComponentSeoLinkingCollectionsPageLandingCollectionOrder], preview: Boolean, skip: Int = 0): PageLandingCollection
  pageProductCollection(limit: Int = 100, locale: String, order: [ComponentSeoLinkingCollectionsPageProductCollectionOrder], preview: Boolean, skip: Int = 0): PageProductCollection
}

enum ComponentSeoLinkingCollectionsGenericContentCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentSeoLinkingCollectionsPageLandingCollectionOrder {
  heroBannerHeadlineColor_ASC
  heroBannerHeadlineColor_DESC
  heroBannerHeadline_ASC
  heroBannerHeadline_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentSeoLinkingCollectionsPageProductCollectionOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentSeoOrder {
  canonicalUrl_ASC
  canonicalUrl_DESC
  internalName_ASC
  internalName_DESC
  nofollow_ASC
  nofollow_DESC
  noindex_ASC
  noindex_DESC
  pageTitle_ASC
  pageTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

input ContentfulMetadataFilter {
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Contenido genérico [See type definition](https://app.contentful.com/spaces/6mnvn3infhdn/content_types/genericContent)
"""
type GenericContent implements Entry {
  contentfulMetadata: ContentfulMetadata!
  contents(locale: String): GenericContentContents
  linkedFrom(allowedLocales: [String]): GenericContentLinkingCollections
  seoFields(locale: String, preview: Boolean, where: ComponentSeoFilter): ComponentSeo
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type GenericContentCollection {
  items: [GenericContent]!
  limit: Int!
  skip: Int!
  total: Int!
}

type GenericContentContents {
  json: JSON!
  links: GenericContentContentsLinks!
}

type GenericContentContentsAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type GenericContentContentsEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type GenericContentContentsLinks {
  assets: GenericContentContentsAssets!
  entries: GenericContentContentsEntries!
  resources: GenericContentContentsResources!
}

type GenericContentContentsResources {
  block: [ResourceLink!]!
  hyperlink: [ResourceLink!]!
  inline: [ResourceLink!]!
}

input GenericContentFilter {
  AND: [GenericContentFilter]
  OR: [GenericContentFilter]
  contentfulMetadata: ContentfulMetadataFilter
  contents_contains: String
  contents_exists: Boolean
  contents_not_contains: String
  seoFields: cfComponentSeoNestedFilter
  seoFields_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type GenericContentLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum GenericContentOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
To have an entry point for the app [See type definition](https://app.contentful.com/spaces/6mnvn3infhdn/content_types/pageLanding)
"""
type PageLanding implements Entry {
  contentfulMetadata: ContentfulMetadata!
  heroBannerHeadline(locale: String): String
  heroBannerHeadlineColor(locale: String): String
  heroBannerImage(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageLandingLinkingCollections
  productsCollection(limit: Int = 100, locale: String, order: [PageLandingProductsCollectionOrder], preview: Boolean, skip: Int = 0, where: PageProductFilter): PageLandingProductsCollection
  seoFields(locale: String, preview: Boolean, where: ComponentSeoFilter): ComponentSeo
  sys: Sys!
}

type PageLandingCollection {
  items: [PageLanding]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageLandingFilter {
  AND: [PageLandingFilter]
  OR: [PageLandingFilter]
  contentfulMetadata: ContentfulMetadataFilter
  heroBannerHeadline: String
  heroBannerHeadlineColor: String
  heroBannerHeadlineColor_contains: String
  heroBannerHeadlineColor_exists: Boolean
  heroBannerHeadlineColor_in: [String]
  heroBannerHeadlineColor_not: String
  heroBannerHeadlineColor_not_contains: String
  heroBannerHeadlineColor_not_in: [String]
  heroBannerHeadline_contains: String
  heroBannerHeadline_exists: Boolean
  heroBannerHeadline_in: [String]
  heroBannerHeadline_not: String
  heroBannerHeadline_not_contains: String
  heroBannerHeadline_not_in: [String]
  heroBannerImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  products: cfPageProductNestedFilter
  productsCollection_exists: Boolean
  seoFields: cfComponentSeoNestedFilter
  seoFields_exists: Boolean
  sys: SysFilter
}

type PageLandingLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PageLandingOrder {
  heroBannerHeadlineColor_ASC
  heroBannerHeadlineColor_DESC
  heroBannerHeadline_ASC
  heroBannerHeadline_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type PageLandingProductsCollection {
  items: [PageProduct]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PageLandingProductsCollectionOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
To output data for a single product [See type definition](https://app.contentful.com/spaces/6mnvn3infhdn/content_types/pageProduct)
"""
type PageProduct implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  featuredProductImage(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageProductLinkingCollections
  name(locale: String): String
  price(locale: String): Float
  productImagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  relatedProductsCollection(limit: Int = 100, locale: String, order: [PageProductRelatedProductsCollectionOrder], preview: Boolean, skip: Int = 0, where: PageProductFilter): PageProductRelatedProductsCollection
  seoFields(locale: String, preview: Boolean, where: ComponentSeoFilter): ComponentSeo
  slug(locale: String): String
  sys: Sys!
}

type PageProductCollection {
  items: [PageProduct]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageProductFilter {
  AND: [PageProductFilter]
  OR: [PageProductFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  featuredProductImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  price: Float
  price_exists: Boolean
  price_gt: Float
  price_gte: Float
  price_in: [Float]
  price_lt: Float
  price_lte: Float
  price_not: Float
  price_not_in: [Float]
  productImagesCollection_exists: Boolean
  relatedProducts: cfPageProductNestedFilter
  relatedProductsCollection_exists: Boolean
  seoFields: cfComponentSeoNestedFilter
  seoFields_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
}

type PageProductLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageLandingCollection(limit: Int = 100, locale: String, order: [PageProductLinkingCollectionsPageLandingCollectionOrder], preview: Boolean, skip: Int = 0): PageLandingCollection
  pageProductCollection(limit: Int = 100, locale: String, order: [PageProductLinkingCollectionsPageProductCollectionOrder], preview: Boolean, skip: Int = 0): PageProductCollection
}

enum PageProductLinkingCollectionsPageLandingCollectionOrder {
  heroBannerHeadlineColor_ASC
  heroBannerHeadlineColor_DESC
  heroBannerHeadline_ASC
  heroBannerHeadline_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum PageProductLinkingCollectionsPageProductCollectionOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum PageProductOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type PageProductRelatedProductsCollection {
  items: [PageProduct]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PageProductRelatedProductsCollectionOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/6mnvn3infhdn/content_types/person)
"""
type Person implements Entry {
  company(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  email(locale: String): String
  facebook(locale: String): String
  github(locale: String): String
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): PersonLinkingCollections
  name(locale: String): String
  phone(locale: String): String
  shortBio(locale: String): PersonShortBio
  sys: Sys!
  title(locale: String): String
  twitter(locale: String): String
}

type PersonCollection {
  items: [Person]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PersonFilter {
  AND: [PersonFilter]
  OR: [PersonFilter]
  company: String
  company_contains: String
  company_exists: Boolean
  company_in: [String]
  company_not: String
  company_not_contains: String
  company_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  facebook: String
  facebook_contains: String
  facebook_exists: Boolean
  facebook_in: [String]
  facebook_not: String
  facebook_not_contains: String
  facebook_not_in: [String]
  github: String
  github_contains: String
  github_exists: Boolean
  github_in: [String]
  github_not: String
  github_not_contains: String
  github_not_in: [String]
  image_exists: Boolean
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  phone: String
  phone_contains: String
  phone_exists: Boolean
  phone_in: [String]
  phone_not: String
  phone_not_contains: String
  phone_not_in: [String]
  shortBio_contains: String
  shortBio_exists: Boolean
  shortBio_not_contains: String
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  twitter: String
  twitter_contains: String
  twitter_exists: Boolean
  twitter_in: [String]
  twitter_not: String
  twitter_not_contains: String
  twitter_not_in: [String]
}

type PersonLinkingCollections {
  blogPostCollection(limit: Int = 100, locale: String, order: [PersonLinkingCollectionsBlogPostCollectionOrder], preview: Boolean, skip: Int = 0): BlogPostCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PersonLinkingCollectionsBlogPostCollectionOrder {
  publishDate_ASC
  publishDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum PersonOrder {
  company_ASC
  company_DESC
  email_ASC
  email_DESC
  facebook_ASC
  facebook_DESC
  github_ASC
  github_DESC
  name_ASC
  name_DESC
  phone_ASC
  phone_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
  twitter_ASC
  twitter_DESC
}

type PersonShortBio {
  json: JSON!
  links: PersonShortBioLinks!
}

type PersonShortBioAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PersonShortBioEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PersonShortBioLinks {
  assets: PersonShortBioAssets!
  entries: PersonShortBioEntries!
  resources: PersonShortBioResources!
}

type PersonShortBioResources {
  block: [ResourceLink!]!
  hyperlink: [ResourceLink!]!
  inline: [ResourceLink!]!
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  _node(id: ID!, locale: String, preview: Boolean): _Node
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  blogPost(id: String!, locale: String, preview: Boolean): BlogPost
  blogPostCollection(limit: Int = 100, locale: String, order: [BlogPostOrder], preview: Boolean, skip: Int = 0, where: BlogPostFilter): BlogPostCollection
  componentSeo(id: String!, locale: String, preview: Boolean): ComponentSeo
  componentSeoCollection(limit: Int = 100, locale: String, order: [ComponentSeoOrder], preview: Boolean, skip: Int = 0, where: ComponentSeoFilter): ComponentSeoCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  genericContent(id: String!, locale: String, preview: Boolean): GenericContent
  genericContentCollection(limit: Int = 100, locale: String, order: [GenericContentOrder], preview: Boolean, skip: Int = 0, where: GenericContentFilter): GenericContentCollection
  pageLanding(id: String!, locale: String, preview: Boolean): PageLanding
  pageLandingCollection(limit: Int = 100, locale: String, order: [PageLandingOrder], preview: Boolean, skip: Int = 0, where: PageLandingFilter): PageLandingCollection
  pageProduct(id: String!, locale: String, preview: Boolean): PageProduct
  pageProductCollection(limit: Int = 100, locale: String, order: [PageProductOrder], preview: Boolean, skip: Int = 0, where: PageProductFilter): PageProductCollection
  person(id: String!, locale: String, preview: Boolean): Person
  personCollection(limit: Int = 100, locale: String, order: [PersonOrder], preview: Boolean, skip: Int = 0, where: PersonFilter): PersonCollection
}

type ResourceLink {
  sys: ResourceSys!
}

type ResourceSys {
  linkType: String!
  type: String!
  urn: String!
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

interface _Node {
  _id: ID!
}

input cfComponentSeoNestedFilter {
  AND: [cfComponentSeoNestedFilter]
  OR: [cfComponentSeoNestedFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  nofollow: Boolean
  nofollow_exists: Boolean
  nofollow_not: Boolean
  noindex: Boolean
  noindex_exists: Boolean
  noindex_not: Boolean
  pageDescription: String
  pageDescription_contains: String
  pageDescription_exists: Boolean
  pageDescription_in: [String]
  pageDescription_not: String
  pageDescription_not_contains: String
  pageDescription_not_in: [String]
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  shareImagesCollection_exists: Boolean
  sys: SysFilter
}

input cfPageProductNestedFilter {
  AND: [cfPageProductNestedFilter]
  OR: [cfPageProductNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  featuredProductImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  price: Float
  price_exists: Boolean
  price_gt: Float
  price_gte: Float
  price_in: [Float]
  price_lt: Float
  price_lte: Float
  price_not: Float
  price_not_in: [Float]
  productImagesCollection_exists: Boolean
  relatedProductsCollection_exists: Boolean
  seoFields_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
}

input cfPersonNestedFilter {
  AND: [cfPersonNestedFilter]
  OR: [cfPersonNestedFilter]
  company: String
  company_contains: String
  company_exists: Boolean
  company_in: [String]
  company_not: String
  company_not_contains: String
  company_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  facebook: String
  facebook_contains: String
  facebook_exists: Boolean
  facebook_in: [String]
  facebook_not: String
  facebook_not_contains: String
  facebook_not_in: [String]
  github: String
  github_contains: String
  github_exists: Boolean
  github_in: [String]
  github_not: String
  github_not_contains: String
  github_not_in: [String]
  image_exists: Boolean
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  phone: String
  phone_contains: String
  phone_exists: Boolean
  phone_in: [String]
  phone_not: String
  phone_not_contains: String
  phone_not_in: [String]
  shortBio_contains: String
  shortBio_exists: Boolean
  shortBio_not_contains: String
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  twitter: String
  twitter_contains: String
  twitter_exists: Boolean
  twitter_in: [String]
  twitter_not: String
  twitter_not_contains: String
  twitter_not_in: [String]
}